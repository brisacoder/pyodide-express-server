[project]
name = "pyodide-express-server"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "httpx>=0.28.1",
    "ipykernel>=6.30.1",
    "matplotlib>=3.10.6",
    "numpy>=2.3.3",
    "pandas>=2.3.2",
    "psutil>=7.0.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15.0",
    "requests>=2.32.5",
]

[dependency-groups]
dev = [
    "flake8>=7.3.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "functional: marks tests as functional tests",
    "security: marks tests as security tests",
    "timeout: marks tests with timeout limits for stress testing",
    "matplotlib: marks tests that use matplotlib plotting",
    "environment: marks tests that check environment configuration",
    "error_handling: marks tests that validate error conditions",
    "performance: marks tests that check performance characteristics",
    "telemetry: marks tests that involve automotive telemetry data analysis",
    "filesystem: marks tests that involve filesystem operations",
    "virtual: marks tests that use virtual filesystem",
    "operations: marks tests that perform file or directory operations",
    "seaborn: marks tests that use seaborn statistical plotting",
    "correlation: marks tests that perform correlation analysis",
    "asyncio: marks tests as asynchronous tests using asyncio"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
